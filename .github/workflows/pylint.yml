name: Pylint

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.create false
        poetry install

    - name: Analyze code with pylint
      run: |
        pylint --rcfile=.pylintrc fautil tests examples || echo "::warning::Pylint found issues but continues"

    - name: Test with pytest
      run: |
        python -m pytest tests/ -v

    - name: Generate badge
      if: matrix.python-version == '3.9' && github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        pylint --rcfile=.pylintrc fautil tests examples --exit-zero --output-format=text | tail -n2 | grep -oP "(?<=rated at ).*(?= \()" > pylint_score.txt
        score=$(cat pylint_score.txt)
        color="red"

        if (( $(echo "$score >= 9.0" | bc -l) )); then
          color="brightgreen"
        elif (( $(echo "$score >= 7.0" | bc -l) )); then
          color="yellow"
        elif (( $(echo "$score >= 5.0" | bc -l) )); then
          color="orange"
        fi

        curl -o pylint_badge.svg "https://img.shields.io/badge/pylint-${score}-${color}"

    - name: Upload badge artifact
      if: matrix.python-version == '3.9' && github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v4
      with:
        name: pylint-badge
        path: pylint_badge.svg
